#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  Swiftlint
summary: |
  Generates swiftlint reports in different formats, compatible with Bitrise test reports add-on
description: |
  This step generates the swiftlint report and saves it to a file in the bitrise deploy folder. It produces 2 environment variables, one with the report and the other one with the path to the report file. The first variable is useful if you want to p pass your report directly to somewhere, for example a Slack channel. The second variable is useful if you want to process the report file further, for example upload it to S3 or attach it to a pull request. Finally, this step is compatible with the Bitrise test reports add-on, so in case the linting fails, you can easily see the details there.
website: https://github.com/lawicko/bitrise-step-swiftlint
source_code_url: https://github.com/lawicko/bitrise-step-swiftlint
support_url: https://github.com/lawicko/bitrise-step-swiftlint/issues
host_os_tags:
  - osx-10.10
  - ubuntu-16.04

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md

project_type_tags:
  - ios
  - macos

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - utility

is_requires_admin_user: true
is_always_run: false
is_skippable: false
run_if: ""

deps:
  brew:
  - name: swiftlint


toolkit:
  bash:
    entry_file: step.sh


inputs:
  - linting_path:
    opts:
      title: "Select the path where Swiftlint should lint"
      summary: ""
      description: ""
      is_required: true

  - lint_config_file: $BITRISE_SOURCE_DIR/.swiftlint.yml
    opts:
      title: "Linting configuration file"
      summary: ""
      description: |-
        If you use a custom linting configuration for Bitrise, you can specify the path here.
      is_required: false

  - reporter: xcode
    opts:
      title: "Select the reporter type"
      summary: ""
      description: |-
        Sets the reporter type when printing violations or errors.
      value_options:
      - checkstyle
      - csv
      - emoji
      - github-actions-logging
      - html
      - json
      - junit
      - markdown
      - sonarqube
      - xcode

  - strict: "no"
    opts:
      title: "Select yes if you want to use the strict mode"
      summary: ""
      description: |-
        When using the strict mode, the warnings will become errors.
      is_required: false
      value_options:
      - "yes"
      - "no"

  - report_file: "swiftlint_report"
    opts:
      title: "The report file name, without extension."
      summary: "The report file name, without extension."
      description: |-
        This will be used as a report file name. Please don't put the extension here. The extension will be determined depending on the reporter that you choose. The default is `swiftlint_report`.
      is_required: true

outputs:
  - SWIFTLINT_REPORT: null
    opts:
      title: "A Swiftlint report"
      summary: The generated Swiftlint report. May be empty if the Swiftlint succeeded with 0 errors or warnings. This is useful when you want to pass it somewhere else, for example on a Slack channel.
      description: The generated Swiftlint report. May be empty if the Swiftlint succeeded with 0 errors or warnings. This is useful when you want to pass it somewhere else, for example on a Slack channel.
      is_dont_change_value: true

  - SWIFTLINT_REPORT_PATH: null
    opts:
      title: "A Swiftlint report path"
      summary: The path to the generated Swiftlint report (by default, it is created by concatenating the `$BITRISE_DEPLOY_DIR` with the `report_file` you provide as one of the inputs to this step. The file name depends on the reporter that was selected, for example for the `junit` reporter, the generated file name will have the extension `xml`, and for the `html` reporter it will be `html`). This is useful if you want to have this report in a separate file and do something with it, for example upload to S3.
      description: The path to the generated Swiftlint report (by default, it is created by concatenating the `$BITRISE_DEPLOY_DIR` with the `report_file` you provide as one of the inputs to this step. The file name depends on the reporter that was selected, for example for the `junit` reporter, the generated file name will have the extension `xml`, and for the `html` reporter it will be `html`). This is useful if you want to have this report in a separate file and do something with it, for example upload to S3.
      is_dont_change_value: true
